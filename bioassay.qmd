---
title: "Bioassays in fruit"
date: '`r paste("Actualizado en", Sys.Date())`'
---

```{r}
source(here::here("setup.R"))
library(lme4)
library(glmmTMB)
library(DHARMa)

theme_set(theme_bw(base_size=12))
```

```{r}
dat <- rio::import("data/bioassay_data.csv") %>%
  mutate_at(vars(fungicide, repetition, day, replicate, fruit), as.factor) %>% 
  mutate(fungicide=fct_relevel(fungicide, "control"))
```

Data structure

```{r}
ftable(xtabs(~ fungicide + day + repetition + replicate, dat))
```

```{r}
dat %>% str
```

## Preventive treatments

Disease severity (spots per fruit)

```{r}
dat %>% 
  ggplot() + 
  aes(x=day, y=spots_per_fruit) + 
  geom_jitter(width=.2, col=2, alpha=.5) + 
  geom_boxplot(width=.5, alpha=.1) + 
  labs(x="Fungicide timing (days after inoculation)", 
       y="Severity (spots per fruit)") + 
  facet_grid(repetition~fungicide)
```

```{r}
dat %>% 
  count(spots_per_fruit) %>% 
  ggplot() + 
  aes(x=spots_per_fruit, y=n) + 
  geom_col()
```

Model fitting

```{r}
# https://glmmtmb.github.io/glmmTMB/articles/glmmTMB.pdf
fit_zipoisson_prev <- glmmTMB(spots_per_fruit~fungicide*day +
                           (1|repetition/replicate),
               ziformula = ~1, family = poisson,
             dat)
```

```{r}
fit_zinbinom_prev <- update(fit_zipoisson_prev,family=nbinom2)
fit_zinbinom1_prev <- update(fit_zipoisson_prev,family=nbinom1)
fit_twediee_prev <- update(fit_zipoisson_prev,family=tweedie)
AIC(fit_zipoisson_prev,fit_zinbinom_prev,fit_zinbinom1_prev, fit_twediee_prev)
```

Goodness of fit

```{r, eval=FALSE}
DHARMa::testOverdispersion(fit_twediee_prev)
DHARMa::testSimulatedResiduals(fit_twediee_prev)
# simulateResiduals(fit_twediee_prev) %>% testResiduals()
```

```{r}
car::Anova(fit_twediee_prev)
```

Treatment means comparison

```{r}
emm_prev <- emmeans(fit_twediee_prev, ~ fungicide|day, type="response") 
res_prev <- cld(emm_prev, alpha=0.05, Letters=letters,  type="response")
res_prev %>% 
   mutate(`%Control`=abs((response/filter(.,fungicide=="control")%>% pull(response)-1)*100)) 

res_prev %>% 
  ggplot()+
  aes(x=day, y =response)+
  geom_pointrange(aes(ymin=asymp.LCL , ymax=asymp.UCL))+
  geom_col(alpha=.2, width=.2)+
  facet_wrap("fungicide")+
    labs(x="Fungicide timing (days before inoculation)", 
         y="Spots per fruit (counts)")

```

## Curative treatments

```{r}
cura <- rio::import("data/curative.csv") %>% 
   mutate_at(vars(fungicide, repetition, replicate, fruit), as.factor) %>% 
  mutate(fungicide=fct_relevel(fungicide, "Control")) 
```

Data structure

```{r}
ftable(xtabs(~ fungicide + repetition + replicate, cura))
```

```{r}
cura %>% str
```

Disease severity (spots per fruit)

```{r}
cura %>% 
  ggplot() + 
  aes(x=fungicide, y=spots_per_fruit) + 
  geom_boxplot(width=.5) + 
  geom_jitter(width=.2, col=2, alpha=.5) + 
  labs(x="Treatment", y="Severity (spots per fruit)") + 
  facet_wrap("repetition")
```

Model fitting

```{r,eval=TRUE}
# https://glmmtmb.github.io/glmmTMB/articles/glmmTMB.pdf
fit_zipoisson_cur <- glmmTMB(spots_per_fruit~fungicide +
                               (1|repetition/replicate),
                             ziformula = ~1, 
                             family = poisson,data = cura)
```

```{r}
fit_zinbinom_cur <- update(fit_zipoisson_cur,family=nbinom2)
fit_zinbinom1_cur <- update(fit_zipoisson_cur,family=nbinom1)
fit_twediee_cur <- update(fit_zipoisson_cur,family=tweedie)
AIC(fit_zipoisson_cur,fit_zinbinom_cur,fit_zinbinom1_cur, fit_twediee_cur)

#               df      AIC
# fit_zipoisson  8 1270.421
# fit_zinbinom   9 1176.582
# fit_zinbinom1  9 1182.421
# fit_twediee   10 1180.572
```

Goodness of fit

```{r eval=FALSE}
simulateResiduals(fit_twediee_cur) %>% testResiduals()
```

```{r}
car::Anova(fit_twediee_cur)
```

Treatment means comparison

```{r}
emm_cura <- emmeans(fit_twediee_cur, ~ fungicide, type="response") 
res_cura <- cld(emm_cura, alpha=0.05, Letters=letters,  type="response")
res_cura %>% 
    mutate(`%Control`=abs((response/filter(.,fungicide=="Control")%>% pull(response)-1)*100)) 

res_cura %>% 
  ggplot()+
  aes(x=fungicide, y =response)+
  geom_pointrange(aes(ymin=asymp.LCL , ymax=asymp.UCL))+
  geom_col(alpha=.2, width=.2)
```
