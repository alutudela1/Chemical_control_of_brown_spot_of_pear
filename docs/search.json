[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Brown spot of pear",
    "section": "",
    "text": "Efficacy of fungicides against brown spot of pear in Argentina\nAbstract…"
  },
  {
    "objectID": "in_vitro.html#mycelial-growth",
    "href": "in_vitro.html#mycelial-growth",
    "title": "1  In vitro experiments",
    "section": "1.1 Mycelial growth",
    "text": "1.1 Mycelial growth\n\nraw &lt;- import(\"data/mycelial_growth.csv\", dec=\",\")\n\ndat &lt;- raw %&gt;% \n  mutate_at(vars(dose, colony_diameter), as.numeric) %&gt;% \n  mutate_at(vars(fungicide, strain, experiment, plate), as.factor) %&gt;% \n  mutate(curve_id = interaction(fungicide:strain:experiment)) \n\nData structure\n\nftable(xtabs(~ fungicide + strain + experiment + dose, dat))\n\n                            dose 0 0.01 0.1 0.5 1 10 50 100 500 1000\nfungicide strain experiment                                         \nBellis    S20    1               3    3   3   0 3  3  3   3   0    0\n                 2               3    3   3   0 3  3  3   3   0    0\n                 3               3    3   3   0 3  3  3   3   0    0\n          S23    1               3    3   3   0 3  3  3   3   0    0\n                 2               3    3   3   0 3  3  3   3   0    0\n                 3               3    3   3   0 3  3  3   3   0    0\n          S8     1               3    3   3   0 3  3  3   3   0    0\n                 2               3    3   3   0 3  3  3   3   0    0\n                 3               3    3   3   0 3  3  3   3   0    0\nMerpan    S20    1               3    0   3   0 3  3  0   3   3    3\n                 2               3    0   3   0 3  3  0   3   3    3\n                 3               3    0   3   0 3  3  0   3   3    3\n          S23    1               3    0   3   0 3  3  0   3   3    3\n                 2               3    0   3   0 3  3  0   3   3    3\n                 3               3    0   3   0 3  3  0   3   3    3\n          S8     1               3    0   3   0 3  3  0   3   3    3\n                 2               3    0   3   0 3  3  0   3   3    3\n                 3               3    0   3   0 3  3  0   3   3    3\nTimorex   S20    1               3    0   3   0 3  3  0   3   3    3\n                 2               3    0   3   0 3  3  0   3   3    3\n                 3               3    0   3   0 3  3  0   3   3    3\n          S23    1               3    0   3   0 3  3  0   3   3    3\n                 2               3    0   3   0 3  3  0   3   3    3\n                 3               3    0   3   0 3  3  0   3   3    3\n          S8     1               3    0   3   0 3  3  0   3   3    3\n                 2               3    0   3   0 3  3  0   3   3    3\n                 3               3    0   3   0 3  3  0   3   3    3\nZiram     S20    1               3    0   3   3 3  3  3   3   0    0\n                 2               3    0   3   3 3  3  3   3   0    0\n                 3               3    0   3   3 3  3  3   3   0    0\n          S23    1               3    0   3   3 3  3  3   3   0    0\n                 2               3    0   3   3 3  3  3   3   0    0\n                 3               3    0   3   3 3  3  3   3   0    0\n          S8     1               3    0   3   3 3  3  3   3   0    0\n                 2               3    0   3   3 3  3  3   3   0    0\n                 3               3    0   3   3 3  3  3   3   0    0\n\n\n\nstr(dat)\n\n'data.frame':   756 obs. of  7 variables:\n $ fungicide      : Factor w/ 4 levels \"Bellis\",\"Merpan\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ strain         : Factor w/ 3 levels \"S20\",\"S23\",\"S8\": 2 2 2 1 1 1 3 3 3 2 ...\n $ experiment     : Factor w/ 3 levels \"1\",\"2\",\"3\": 1 1 1 1 1 1 1 1 1 1 ...\n $ dose           : num  0 0 0 0 0 0 0 0 0 100 ...\n $ plate          : Factor w/ 3 levels \"1\",\"2\",\"3\": 1 2 3 1 2 3 1 2 3 1 ...\n $ colony_diameter: num  53 55 56 52 53 52 51 51 52 0 ...\n $ curve_id       : Factor w/ 36 levels \"Bellis:S20:1\",..: 4 4 4 1 1 1 7 7 7 4 ...\n\n\nDose-response curves fitting by meta-analysis approach\n\n# verify drc_per_strain.R\nmod_mg &lt;- metadrm(colony_diameter ~ dose, \n               data=dat,\n               fct=LL.3(),\n               ind=curve_id,\n               cid2=fungicide,\n               struct=\"UN\")\nsave(mod_mg, file= \"models/invitro_mg.rds\")\n\n\nload(\"models/invitro_mg.rds\")\nsummary(mod_mg)\n\n\nTwo-stage meta-analysis dose-response model\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0\n\nCall:\nmetadrm(formula = colony_diameter ~ dose, fct = LL.3(), ind = curve_id, \n    data = dat, cid2 = fungicide, struct = \"UN\")\n\nVariance estimates:\n            estim    sqrt\ntau^2.1    0.0023  0.0481\ntau^2.2    8.1930  2.8623\ntau^2.3    0.0001  0.0076\n\n               rho.b:(I  rho.d:(I  rho.e:(I\nb:(Intercept)         1   -0.0949    0.9136\nd:(Intercept)   -0.0949         1   -0.4915\ne:(Intercept)    0.9136   -0.4915         1\n\n\nCoefficients:\n             Estimate     Std.Err t value              Pr(&gt;|t|)    \nb:Bellis    0.5795367   0.0182490 31.7572 &lt; 0.00000000000000022 ***\nb:Merpan    0.3611793   0.0183369 19.6968 &lt; 0.00000000000000022 ***\nb:Timorex   0.3490411   0.0324495 10.7565 &lt; 0.00000000000000022 ***\nb:Ziram     0.3926960   0.0202379 19.4040 &lt; 0.00000000000000022 ***\nd:Bellis   51.3746461   0.9890286 51.9446 &lt; 0.00000000000000022 ***\nd:Merpan   52.5139150   1.0667613 49.2274 &lt; 0.00000000000000022 ***\nd:Timorex  49.9869522   1.3972223 35.7759 &lt; 0.00000000000000022 ***\nd:Ziram    53.0642566   1.1218557 47.3004 &lt; 0.00000000000000022 ***\ne:Bellis    0.0297542   0.0027299 10.8994 &lt; 0.00000000000000022 ***\ne:Merpan   24.5154698   1.6200305 15.1327 &lt; 0.00000000000000022 ***\ne:Timorex 112.8372474  22.1680049  5.0901           0.000001779 ***\ne:Ziram     6.4555590   0.6162007 10.4764 &lt; 0.00000000000000022 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nEC50 Estimates\n\nec50s &lt;- ED(mod_mg, respLev=c(50)) %&gt;% data.frame\n\n\nEstimated effective doses\n\n                Estimate  Std. Error\ne:Bellis:50    0.0297542   0.0027299\ne:Merpan:50   24.5154698   1.6200305\ne:Timorex:50 112.8372474  22.1680049\ne:Ziram:50     6.4555590   0.6162007\n\n# coef_mod_mg &lt;- summary(mod_mg) %&gt;% data.frame %&gt;% \n#   rownames_to_column(\"param\")  %&gt;% \n#   separate(param, c(\"param\", \"fungicide\"))\n# ec50s &lt;- coef_mod_mg %&gt;% filter(param==\"e\") \n# ec50s\n\nComparing fungicides EC50\nAs we compare EC50 ratios between fungicides, if the confidence interval does not contain 1, fungicides differ among them:\n\ned_comp &lt;- EDcomp(mod_mg, \n                  percVec=c(50), \n                  percMat=rbind(c(1,1,1,1)), \n                  interval=\"fieller\") %&gt;% \n      data.frame %&gt;% \n  rownames_to_column(\"comp\") %&gt;%\n  rowwise() %&gt;% \n  mutate(relative_to_one = f(Lower, Upper, 1)) # %&gt;% \n\n\nEstimated ratios of effect doses\n\n                        Estimate       Lower       Upper\nBellis/Merpan:50/50   0.00121369  0.00095935  0.00151054\nBellis/Timorex:50/50  0.00026369  0.00017897  0.00044300\nBellis/Ziram:50/50    0.00460909  0.00353519  0.00602624\nMerpan/Timorex:50/50  0.21726398  0.15162515  0.36083619\nMerpan/Ziram:50/50    3.79757505  3.03655193  4.84141476\nTimorex/Ziram:50/50  17.47908235 10.38447082 25.87541262\n\n  # as_huxtable() %&gt;% \n  # set_number_format(1)\ned_comp\n\n# A tibble: 6 × 5\n# Rowwise: \n  comp                  Estimate     Lower     Upper relative_to_one\n  &lt;chr&gt;                    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;          \n1 Bellis/Merpan:50/50   0.00121   0.000959  0.00151  below          \n2 Bellis/Timorex:50/50  0.000264  0.000179  0.000443 below          \n3 Bellis/Ziram:50/50    0.00461   0.00354   0.00603  below          \n4 Merpan/Timorex:50/50  0.217     0.152     0.361    below          \n5 Merpan/Ziram:50/50    3.80      3.04      4.84     above          \n6 Timorex/Ziram:50/50  17.5      10.4      25.9      above          \n\n\n\ned_comp %&gt;% \n  ggplot()+ \n  aes(x=comp, y=Estimate) + \n  geom_pointrange(aes(ymin = Lower, ymax = Upper, col=relative_to_one))+     \n  geom_hline(yintercept = 1, linetype=2)+\n  # scale_y_log10()+\n  coord_flip() + \n  labs(col=\"Relative to 1\")\n\n\ndat %&gt;% \n  ggplot()+\n  aes(x=dose+0.0001, y=colony_diameter, col=fungicide) +\n  geom_point(size=.5) + \n  geom_smooth(method = drm, \n              method.args = list(fct = L.3()), se = F) +\n    geom_smooth(aes(group=curve_id), size=.3, linetype=2,  \n              method = drm, \n              method.args = list(fct = L.3()), se = F) +\n  labs(title= \"\", x = \"Dose (ppm)\",  y = \"Colony diameter (cm)\", col= \"Fungicide\") + \n  scale_x_log10() +\n  theme_bw(base_family=12)\n\n\n\n\n\nggsave(last_plot(), file=\"plots/mg_curves.jpg\", width = 8, height = 6, units = \"cm\", scale=1.5, dpi = 300)"
  },
  {
    "objectID": "in_vitro.html#spore-germination",
    "href": "in_vitro.html#spore-germination",
    "title": "1  In vitro experiments",
    "section": "1.2 Spore germination",
    "text": "1.2 Spore germination\n\ngermi_raw &lt;- import(\"data/germination.csv\", dec=\",\")\ngermi_dat &lt;- germi_raw %&gt;% \n  mutate_at(vars(dose), as.numeric) %&gt;% \n  mutate_at(vars(fungicide, strain, repetition, replicate), as.factor) %&gt;% \n  mutate(curve_id = interaction(fungicide:strain:repetition)) %&gt;% \n  mutate(dose_ = dose+0.0001)\n\nData structure\n\nftable(xtabs(complete.cases(germination_percent)~fungicide+dose+strain , data=germi_dat))\n\n               strain S20 S23 S8\nfungicide dose                  \nBellis    0             6   6  6\n          0.1           6   6  6\n          1             6   6  6\n          10            6   6  6\n          50            6   6  6\n          100           6   6  6\n          500           0   0  0\n          1000          0   0  0\nMerpan    0             6   6  6\n          0.1           6   6  6\n          1             6   6  6\n          10            6   6  6\n          50            0   0  0\n          100           6   6  6\n          500           6   6  6\n          1000          6   6  6\nTimorex   0             6   6  6\n          0.1           6   6  6\n          1             6   6  6\n          10            6   6  6\n          50            0   0  0\n          100           6   6  6\n          500           6   6  6\n          1000          6   6  6\nZiram     0             6   6  6\n          0.1           6   6  6\n          1             6   6  6\n          10            6   6  6\n          50            6   6  6\n          100           6   6  6\n          500           0   0  0\n          1000          0   0  0\n\n\n\nstr(germi_dat)\n\n'data.frame':   468 obs. of  12 variables:\n $ fungicide             : Factor w/ 4 levels \"Bellis\",\"Merpan\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ strain                : Factor w/ 3 levels \"S20\",\"S23\",\"S8\": 2 2 2 1 1 1 3 3 3 2 ...\n $ repetition            : Factor w/ 2 levels \"1\",\"2\": 1 1 1 1 1 1 1 1 1 1 ...\n $ replicate             : Factor w/ 3 levels \"1\",\"2\",\"3\": 1 2 3 1 2 3 1 2 3 1 ...\n $ dose                  : num  100 100 100 100 100 100 100 100 100 50 ...\n $ germinated_conidia    : int  0 0 0 0 0 0 0 0 0 0 ...\n $ total_conida          : int  100 100 100 100 100 100 100 100 100 100 ...\n $ non_germinated_conidia: int  100 100 100 100 100 100 100 100 100 100 ...\n $ inhibition_perc       : int  100 100 100 100 100 100 100 100 100 100 ...\n $ germination_percent   : int  0 0 0 0 0 0 0 0 0 0 ...\n $ curve_id              : Factor w/ 24 levels \"Bellis:S20:1\",..: 3 3 3 1 1 1 5 5 5 3 ...\n $ dose_                 : num  100 100 100 100 100 ...\n\n\nDose-response curves fitting by meta-analysis approach\n\nmod_germ &lt;- metadrm(germination_percent ~ dose_, \n               data=germi_dat,\n               fct=LL.3(),\n               ind=curve_id,\n               cid2=fungicide,\n               struct=\"UN\")\nsave(mod_germ, file= \"models/invitro_germ.rds\")\n\n\nload(\"models/invitro_germ.rds\")\nsummary(mod_germ) \n\n\nTwo-stage meta-analysis dose-response model\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0\n\nCall:\nmetadrm(formula = germination_percent ~ dose_, fct = LL.3(), \n    ind = curve_id, data = germi_dat, cid2 = fungicide, struct = \"UN\")\n\nVariance estimates:\n            estim    sqrt\ntau^2.1    0.0024  0.0494\ntau^2.2    0.0063  0.0792\ntau^2.3    0.0001  0.0090\n\n               rho.b:(I  rho.d:(I  rho.e:(I\nb:(Intercept)         1    1.0000    1.0000\nd:(Intercept)    1.0000         1    1.0000\ne:(Intercept)    1.0000    1.0000         1\n\n\nCoefficients:\n             Estimate     Std.Err  t value              Pr(&gt;|t|)    \nb:Bellis    1.0898626   0.0854167  12.7594 &lt; 0.00000000000000022 ***\nb:Merpan    1.3070417   0.0560275  23.3286 &lt; 0.00000000000000022 ***\nb:Timorex   1.0749724   0.1249763   8.6014     0.000000000004650 ***\nb:Ziram     0.6145974   0.0415450  14.7935 &lt; 0.00000000000000022 ***\nd:Bellis   99.8992681   0.2360299 423.2484 &lt; 0.00000000000000022 ***\nd:Merpan   97.9883814   0.5305522 184.6913 &lt; 0.00000000000000022 ***\nd:Timorex  97.6597656   1.7236343  56.6592 &lt; 0.00000000000000022 ***\nd:Ziram    99.0543330   2.0387322  48.5862 &lt; 0.00000000000000022 ***\ne:Bellis    0.0231700   0.0051014   4.5419     0.000027438625743 ***\ne:Merpan    1.1355696   0.0241592  47.0036 &lt; 0.00000000000000022 ***\ne:Timorex 289.0283519  34.0651922   8.4846     0.000000000007338 ***\ne:Ziram     0.1557700   0.0270433   5.7600     0.000000308016186 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nEC50´s Estimates\n\nec50s_g &lt;- ED(mod_germ, respLev=c(50)) %&gt;% as.data.frame()\n\n\nEstimated effective doses\n\n                Estimate  Std. Error\ne:Bellis:50    0.0231700   0.0051014\ne:Merpan:50    1.1355696   0.0241592\ne:Timorex:50 289.0283519  34.0651922\ne:Ziram:50     0.1557700   0.0270433\n\nec50s_g\n\n                 Estimate   Std. Error\ne:Bellis:50    0.02317004  0.005101351\ne:Merpan:50    1.13556964  0.024159210\ne:Timorex:50 289.02835194 34.065192159\ne:Ziram:50     0.15577000  0.027043327\n\n\n\ngerm_comp &lt;- EDcomp(mod_germ, \n       percVec=c(50), \n       percMat=rbind(c(1,1,1,1)), \n       interval=\"fieller\")  %&gt;% \n    data.frame %&gt;% \n  rownames_to_column(\"comp\") %&gt;%\n  rowwise() %&gt;% \n  mutate(relative_to_one = f(Lower, Upper, 1))\n\n\nEstimated ratios of effect doses\n\n                           Estimate          Lower          Upper\nBellis/Merpan:50/50     0.020403889    0.011404798    0.029477018\nBellis/Timorex:50/50    0.000080165    0.000043407    0.000126360\nBellis/Ziram:50/50      0.148745178    0.077874246    0.260413050\nMerpan/Timorex:50/50    0.003928921    0.003164387    0.005155910\nMerpan/Ziram:50/50      7.290040642    5.392013944   11.187536191\nTimorex/Ziram:50/50  1855.481470394 1241.326870777 2978.546457196\n\ngerm_comp\n\n# A tibble: 6 × 5\n# Rowwise: \n  comp                     Estimate        Lower       Upper relative_to_one\n  &lt;chr&gt;                       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;          \n1 Bellis/Merpan:50/50     0.0204       0.0114       0.0295   below          \n2 Bellis/Timorex:50/50    0.0000802    0.0000434    0.000126 below          \n3 Bellis/Ziram:50/50      0.149        0.0779       0.260    below          \n4 Merpan/Timorex:50/50    0.00393      0.00316      0.00516  below          \n5 Merpan/Ziram:50/50      7.29         5.39        11.2      above          \n6 Timorex/Ziram:50/50  1855.        1241.        2979.       above          \n\n\n\ncoef_mod_germ &lt;- summary(mod_germ) %&gt;% data.frame %&gt;% \n    rownames_to_column(\"param\")  %&gt;% \n  separate(param, c(\"param\", \"fungicide\"))\n\n\nTwo-stage meta-analysis dose-response model\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0\n\nCall:\nmetadrm(formula = germination_percent ~ dose_, fct = LL.3(), \n    ind = curve_id, data = germi_dat, cid2 = fungicide, struct = \"UN\")\n\nVariance estimates:\n            estim    sqrt\ntau^2.1    0.0024  0.0494\ntau^2.2    0.0063  0.0792\ntau^2.3    0.0001  0.0090\n\n               rho.b:(I  rho.d:(I  rho.e:(I\nb:(Intercept)         1    1.0000    1.0000\nd:(Intercept)    1.0000         1    1.0000\ne:(Intercept)    1.0000    1.0000         1\n\n\nCoefficients:\n             Estimate     Std.Err  t value              Pr(&gt;|t|)    \nb:Bellis    1.0898626   0.0854167  12.7594 &lt; 0.00000000000000022 ***\nb:Merpan    1.3070417   0.0560275  23.3286 &lt; 0.00000000000000022 ***\nb:Timorex   1.0749724   0.1249763   8.6014     0.000000000004650 ***\nb:Ziram     0.6145974   0.0415450  14.7935 &lt; 0.00000000000000022 ***\nd:Bellis   99.8992681   0.2360299 423.2484 &lt; 0.00000000000000022 ***\nd:Merpan   97.9883814   0.5305522 184.6913 &lt; 0.00000000000000022 ***\nd:Timorex  97.6597656   1.7236343  56.6592 &lt; 0.00000000000000022 ***\nd:Ziram    99.0543330   2.0387322  48.5862 &lt; 0.00000000000000022 ***\ne:Bellis    0.0231700   0.0051014   4.5419     0.000027438625743 ***\ne:Merpan    1.1355696   0.0241592  47.0036 &lt; 0.00000000000000022 ***\ne:Timorex 289.0283519  34.0651922   8.4846     0.000000000007338 ***\ne:Ziram     0.1557700   0.0270433   5.7600     0.000000308016186 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# ec50_germ &lt;- coef_mod_germ %&gt;% filter(param==\"e\") \n# ec50_germ\n\n\ngerm_comp %&gt;% \n  ggplot()+ \n  aes(x=comp, y=Estimate) + \n  geom_pointrange(aes(ymin = Lower, ymax = Upper, col=relative_to_one))+     \n  geom_hline(yintercept = 1, linetype=2)+\n  coord_flip() + \n  labs(col=\"Relative to 1\")\n\n\ngermi_dat %&gt;% \n  ggplot()+\n  aes(x=dose+0.0001, y=germination_percent, col=fungicide) +\n  scale_x_log10() +\n  geom_point(size=1) + \n  geom_smooth(method = drm, \n              method.args = list(fct = L.3()), se = F) +  \n  geom_smooth(aes(group=curve_id), size=.3, linetype=2,  \n              method = drm, \n              method.args = list(fct = L.3()), se = F) +\n  labs(title= \"\", x = \"Dose (ppm)\",  y = \"Germination (%)\", col= \"Fungicide\")  +\n  theme_bw(base_family=12)\n\n\n\n\n\nggsave(last_plot(), file=\"plots/germi_curves.jpg\", width = 8, height = 6, units = \"cm\", scale=1.5, dpi = 300)"
  },
  {
    "objectID": "in_field.html",
    "href": "in_field.html",
    "title": "3  In-field assays",
    "section": "",
    "text": "source(here::here(\"setup.R\"))\n\nSkipping install of 'drcData' from a github remote, the SHA1 (09f9da30) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\nSkipping install of 'drc' from a github remote, the SHA1 (8719d43a) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\nSkipping install of 'medrc' from a github remote, the SHA1 (bc36df51) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\n[conflicted] Will prefer dplyr::filter over any other package.\n[conflicted] Will prefer dplyr::select over any other package.\nv Setting active project to 'C:/Users/tudela.alumine/Desktop/Chemical_control_of_brown_spot_of_pear-main/Chemical_control_of_brown_spot_of_pear'\nv Leaving 'README.Rmd' unchanged\n\nlibrary(lme4)\ntheme_set(theme_bw(base_size=12))\n\n\ndat &lt;- rio::import(\"data/field.csv\") %&gt;% \n  mutate_at(vars(fungicide, season, tree), as.factor) %&gt;% \n  mutate(fungicide=fct_relevel(fungicide, \"Control\"))\nstr(dat)\n\n'data.frame':   60 obs. of  5 variables:\n $ fungicide: Factor w/ 3 levels \"Control\",\"Bellis\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ season   : Factor w/ 2 levels \"1\",\"2\": 2 2 2 2 2 2 2 2 2 2 ...\n $ tree     : Factor w/ 10 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ leaves   : int  250 250 250 250 250 250 250 250 250 250 ...\n $ diseased : int  27 19 26 30 16 40 27 22 19 8 ...\n\n\nData scheme\n\nftable(xtabs(~ fungicide + tree + season, dat))\n\n               season 1 2\nfungicide tree           \nControl   1           1 1\n          2           1 1\n          3           1 1\n          4           1 1\n          5           1 1\n          6           1 1\n          7           1 1\n          8           1 1\n          9           1 1\n          10          1 1\nBellis    1           1 1\n          2           1 1\n          3           1 1\n          4           1 1\n          5           1 1\n          6           1 1\n          7           1 1\n          8           1 1\n          9           1 1\n          10          1 1\nZiram     1           1 1\n          2           1 1\n          3           1 1\n          4           1 1\n          5           1 1\n          6           1 1\n          7           1 1\n          8           1 1\n          9           1 1\n          10          1 1\n\n\nModel\n\ndat %&gt;% \n  ggplot() + \n  aes(x=fungicide, y=diseased/leaves) + \n  # geom_boxplot(width=.5) + \n  geom_text(aes(label=tree))+\n  geom_jitter(width=.2, col=2, alpha=.5) + \n  labs(x=\"Treatment\", y=\"Disease incidence\") + \n  facet_wrap(\"season\")\n\n\n\n\n\nmod &lt;- glmer(diseased/leaves ~ fungicide * season + (1|tree),\n             weights=leaves, family=binomial, dat)\n\nGoodness of fit\n\nsimulateResiduals(mod) %&gt;% testResiduals()\n\n\n\ncar::Anova(mod)\n\n\n\n\nChisq\nDf\nPr(&gt;Chisq)\n\n\n161  \n2\n1.35e-35\n\n\n25.2\n1\n5.11e-07\n\n\n41.1\n2\n1.18e-09\n\n\n\n\n\n\n\nMeans comparison test\n\nemm &lt;- emmeans(mod, ~ fungicide|season, type=\"response\") \nres &lt;- cld(emm, alpha=0.05, Letters=letters,  type=\"response\") %&gt;% \n   mutate(`%Control`=abs((prob/dplyr::filter(.,fungicide==\"Control\")%&gt;% pull(prob)-1)*100)) %&gt;% \n  tibble\n\nres %&gt;% \n  rename(Season=\"season\") %&gt;% \n  ggplot()+\n  aes(x=fungicide, y =prob)+\n  geom_pointrange(aes(ymin=asymp.LCL , ymax=asymp.UCL))+\n  facet_wrap(\"Season\", labeller = label_both) + geom_text(aes(label=str_squish(.group)), angle=90, vjust=-1, hjust=.5, ) + \n  geom_jitter(data=dat%&gt;%rename(Season=\"season\") , aes(y=diseased/leaves), alpha=.2, width=.1)"
  },
  {
    "objectID": "bioassay.html#preventive-treatments",
    "href": "bioassay.html#preventive-treatments",
    "title": "2  Bioassays in fruit",
    "section": "2.1 Preventive treatments",
    "text": "2.1 Preventive treatments\nDisease severity analysis (spots per fruit)\n\nsource(here::here(\"setup.R\"))\n\n[conflicted] Will prefer dplyr::filter over any other package.\n[conflicted] Will prefer dplyr::select over any other package.\n\nlibrary(lme4)\nlibrary(glmmTMB)\nlibrary(DHARMa)\n\nThis is DHARMa 0.4.6. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\n\ntheme_set(theme_bw(base_size=12))\n\n\ndat &lt;- rio::import(\"data/bioassay_data.csv\") %&gt;%\n  mutate_at(vars(fungicide, repetition, day, replicate, fruit), as.factor) %&gt;% \n  mutate(fungicide=fct_relevel(fungicide, \"control\"))\n\n\ndat %&gt;% str\n\n'data.frame':   600 obs. of  6 variables:\n $ fungicide      : Factor w/ 5 levels \"control\",\"Bellis\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ repetition     : Factor w/ 2 levels \"1\",\"2\": 1 1 1 1 1 1 1 1 1 1 ...\n $ day            : Factor w/ 3 levels \"1\",\"7\",\"15\": 1 1 1 1 1 1 1 1 1 1 ...\n $ replicate      : Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 1 1 1 1 1 2 2 2 2 2 ...\n $ fruit          : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 1 2 3 4 5 ...\n $ spots_per_fruit: int  1 0 0 0 0 0 0 0 0 0 ...\n\n\nData scheme\n\nftable(xtabs(~ fungicide + day + repetition + replicate, dat))\n\n                         replicate 1 2 3 4\nfungicide day repetition                  \ncontrol   1   1                    5 5 5 5\n              2                    5 5 5 5\n          7   1                    5 5 5 5\n              2                    5 5 5 5\n          15  1                    5 5 5 5\n              2                    5 5 5 5\nBellis    1   1                    5 5 5 5\n              2                    5 5 5 5\n          7   1                    5 5 5 5\n              2                    5 5 5 5\n          15  1                    5 5 5 5\n              2                    5 5 5 5\nMerpan    1   1                    5 5 5 5\n              2                    5 5 5 5\n          7   1                    5 5 5 5\n              2                    5 5 5 5\n          15  1                    5 5 5 5\n              2                    5 5 5 5\nTimorex   1   1                    5 5 5 5\n              2                    5 5 5 5\n          7   1                    5 5 5 5\n              2                    5 5 5 5\n          15  1                    5 5 5 5\n              2                    5 5 5 5\nZiram     1   1                    5 5 5 5\n              2                    5 5 5 5\n          7   1                    5 5 5 5\n              2                    5 5 5 5\n          15  1                    5 5 5 5\n              2                    5 5 5 5\n\n\n\n2.1.1 Disease severity\n\ndat %&gt;% \n  ggplot() + \n  aes(x=day, y=spots_per_fruit) + \n  geom_boxplot(width=.5) + \n  geom_jitter(width=.2, col=2, alpha=.5) + \n  labs(x=\"Treatment\", y=\"Severity (spots per fruit)\") + \n  facet_grid(repetition~fungicide)\n\n\n\n\n\ndat %&gt;% \n  count(spots_per_fruit) %&gt;% \n  ggplot() + \n  aes(x=spots_per_fruit, y=n) + \n  geom_col()\n\n\n\n\nModel fitting\n\n# https://glmmtmb.github.io/glmmTMB/articles/glmmTMB.pdf\nfit_zipoisson_prev &lt;- glmmTMB(spots_per_fruit~fungicide*day +\n                           (1|repetition/replicate),\n               ziformula = ~1, family = poisson,\n             dat)\n\n\nfit_zinbinom_prev &lt;- update(fit_zipoisson_prev,family=nbinom2)\nfit_zinbinom1_prev &lt;- update(fit_zipoisson_prev,family=nbinom1)\nfit_twediee_prev &lt;- update(fit_zipoisson_prev,family=tweedie)\nAIC(fit_zipoisson_prev,fit_zinbinom_prev,fit_zinbinom1_prev, fit_twediee_prev)\n\n                   df      AIC\nfit_zipoisson_prev 18 3890.310\nfit_zinbinom_prev  19 3486.965\nfit_zinbinom1_prev 19 3419.425\nfit_twediee_prev   20 3405.244\n\n#               df      AIC\n# fit_zipoisson 18 3895.200\n# fit_zinbinom  19 3489.228\n# fit_zinbinom1 19 3418.201\n# fit_twediee   20 3405.606\n\nGoodness of fit\n\nsimulateResiduals(fit_twediee_prev) %&gt;% testResiduals()\n\n\n\n\n$uniformity\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  simulationOutput$scaledResiduals\nD = 0.021, p-value = 0.954\nalternative hypothesis: two-sided\n\n\n$dispersion\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.76533, p-value = 0.064\nalternative hypothesis: two.sided\n\n\n$outliers\n\n    DHARMa outlier test based on exact binomial test with approximate\n    expectations\n\ndata:  simulationOutput\noutliers at both margin(s) = 10, observations = 600, p-value = 0.03228\nalternative hypothesis: true probability of success is not equal to 0.007968127\n95 percent confidence interval:\n 0.008020507 0.030436459\nsample estimates:\nfrequency of outliers (expected: 0.00796812749003984 ) \n                                            0.01666667 \n\n\n$uniformity\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  simulationOutput$scaledResiduals\nD = 0.021, p-value = 0.954\nalternative hypothesis: two-sided\n\n\n$dispersion\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.76533, p-value = 0.064\nalternative hypothesis: two.sided\n\n\n$outliers\n\n    DHARMa outlier test based on exact binomial test with approximate\n    expectations\n\ndata:  simulationOutput\noutliers at both margin(s) = 10, observations = 600, p-value = 0.03228\nalternative hypothesis: true probability of success is not equal to 0.007968127\n95 percent confidence interval:\n 0.008020507 0.030436459\nsample estimates:\nfrequency of outliers (expected: 0.00796812749003984 ) \n                                            0.01666667 \n\n\n\ncar::Anova(fit_twediee_prev)\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: spots_per_fruit\n                Chisq Df            Pr(&gt;Chisq)    \nfungicide     2826.15  4 &lt; 0.00000000000000022 ***\nday            148.41  2 &lt; 0.00000000000000022 ***\nfungicide:day  327.88  8 &lt; 0.00000000000000022 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nMeans comparison test\n\nemm_prev &lt;- emmeans(fit_twediee_prev, ~ fungicide|day, type=\"response\") \nres_prev &lt;- cld(emm_prev, alpha=0.05, Letters=letters,  type=\"response\")\nres_prev %&gt;% \n   mutate(`%Control`=abs((response/filter(.,fungicide==\"control\")%&gt;% pull(response)-1)*100)) \n\n   fungicide day   response         SE  df   asymp.LCL  asymp.UCL .group\n2     Bellis   1  0.1266087 0.06435246 Inf  0.04675374  0.3428553   a   \n3     Merpan   1  0.5055717 0.14652770 Inf  0.28647233  0.8922425   ab  \n5      Ziram   1  1.1179829 0.23580319 Inf  0.73943685  1.6903213    b  \n4    Timorex   1 19.4414909 1.33246605 Inf 16.99771586 22.2366094     c \n1    control   1 73.8540017 3.22802344 Inf 67.79061416 80.4597161      d\n10     Ziram   7  1.4931835 0.28182958 Inf  1.03146361  2.1615857    a  \n8     Merpan   7  2.3203471 0.36915475 Inf  1.69875745  3.1693817    a  \n7     Bellis   7  2.7964637 0.41667960 Inf  2.08822925  3.7448997    a  \n9    Timorex   7 54.1858706 2.60846796 Inf 49.30714307 59.5473271     b \n6    control   7 75.9541403 3.29232755 Inf 69.76780397 82.6890213      c\n12    Bellis  15  4.3163835 0.54531743 Inf  3.36962889  5.5291449   a   \n15     Ziram  15  6.1277829 0.66068554 Inf  4.96053467  7.5696928   a   \n13    Merpan  15 10.2948040 1.26533588 Inf  8.09089887 13.0990376    b  \n14   Timorex  15 57.5035175 2.71593663 Inf 52.41933283 63.0808205     c \n11   control  15 79.8718272 3.41023449 Inf 73.45991670 86.8433980      d\n    %Control\n2  99.828569\n3  99.334372\n5  98.600279\n4  73.675779\n1   2.765009\n10 98.130525\n8  96.858197\n7  96.318221\n9  32.158970\n6   2.843635\n12 94.317119\n15 92.327980\n13 86.060601\n14 24.291793\n11  0.000000\n\nres_prev %&gt;% \n  ggplot()+\n  aes(x=day, y =response)+\n  geom_pointrange(aes(ymin=asymp.LCL , ymax=asymp.UCL))+\n  geom_col(alpha=.2, width=.2)+\n  facet_wrap(\"fungicide\")"
  },
  {
    "objectID": "bioassay.html#curative-treatments",
    "href": "bioassay.html#curative-treatments",
    "title": "2  Bioassays in fruit",
    "section": "2.2 Curative treatments",
    "text": "2.2 Curative treatments\n\ncura &lt;- rio::import(\"data/curative.csv\") %&gt;% \n   mutate_at(vars(fungicide, repetition, replicate, fruit), as.factor) %&gt;% \n  mutate(fungicide=fct_relevel(fungicide, \"Control\")) \n\nData scheme\n\ncura %&gt;% str\n\n'data.frame':   200 obs. of  5 variables:\n $ fungicide      : Factor w/ 5 levels \"Control\",\"Bellis\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ repetition     : Factor w/ 2 levels \"1\",\"2\": 1 1 1 1 1 1 1 1 1 1 ...\n $ replicate      : Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 1 1 1 1 1 2 2 2 2 2 ...\n $ fruit          : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 1 2 3 4 5 ...\n $ spots_per_fruit: int  33 32 40 22 16 16 6 14 41 30 ...\n\nftable(xtabs(~ fungicide + repetition + replicate, cura))\n\n                     replicate 1 2 3 4\nfungicide repetition                  \nControl   1                    5 5 5 5\n          2                    5 5 5 5\nBellis    1                    5 5 5 5\n          2                    5 5 5 5\nMerpan    1                    5 5 5 5\n          2                    5 5 5 5\nTimorex   1                    5 5 5 5\n          2                    5 5 5 5\nZiram     1                    5 5 5 5\n          2                    5 5 5 5\n\n\n\n2.2.1 Disease severity (spots per fruit)\nBox plot: severity per treatment and repetition (1 and 2)\n\ncura %&gt;% \n  ggplot() + \n  aes(x=fungicide, y=spots_per_fruit) + \n  geom_boxplot(width=.5) + \n  geom_jitter(width=.2, col=2, alpha=.5) + \n  labs(x=\"Treatment\", y=\"Severity (spots per fruit)\") + \n  facet_wrap(\"repetition\")\n\n\n\n\nModel fitting\n\n# https://glmmtmb.github.io/glmmTMB/articles/glmmTMB.pdf\nfit_zipoisson_cur &lt;- glmmTMB(spots_per_fruit~fungicide +\n                               (1|repetition/replicate),\n                             ziformula = ~1, \n                             family = poisson,data = cura)\n\n\nfit_zinbinom_cur &lt;- update(fit_zipoisson_cur,family=nbinom2)\nfit_zinbinom1_cur &lt;- update(fit_zipoisson_cur,family=nbinom1)\nfit_twediee_cur &lt;- update(fit_zipoisson_cur,family=tweedie)\nAIC(fit_zipoisson_cur,fit_zinbinom_cur,fit_zinbinom1_cur, fit_twediee_cur)\n\n                  df      AIC\nfit_zipoisson_cur  8 1264.879\nfit_zinbinom_cur   9 1176.775\nfit_zinbinom1_cur  9 1184.694\nfit_twediee_cur   10 1179.372\n\n#               df      AIC\n# fit_zipoisson  8 1270.421\n# fit_zinbinom   9 1176.582\n# fit_zinbinom1  9 1182.421\n# fit_twediee   10 1180.572\n\nGoodness of fit\n\nsimulateResiduals(fit_twediee_cur) %&gt;% testResiduals()\n\n\n\n\n$uniformity\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  simulationOutput$scaledResiduals\nD = 0.041, p-value = 0.8898\nalternative hypothesis: two-sided\n\n\n$dispersion\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.73874, p-value = 0.16\nalternative hypothesis: two.sided\n\n\n$outliers\n\n    DHARMa outlier test based on exact binomial test with approximate\n    expectations\n\ndata:  simulationOutput\noutliers at both margin(s) = 2, observations = 200, p-value = 0.6757\nalternative hypothesis: true probability of success is not equal to 0.007968127\n95 percent confidence interval:\n 0.001213349 0.035654668\nsample estimates:\nfrequency of outliers (expected: 0.00796812749003984 ) \n                                                  0.01 \n\n\n$uniformity\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  simulationOutput$scaledResiduals\nD = 0.041, p-value = 0.8898\nalternative hypothesis: two-sided\n\n\n$dispersion\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.73874, p-value = 0.16\nalternative hypothesis: two.sided\n\n\n$outliers\n\n    DHARMa outlier test based on exact binomial test with approximate\n    expectations\n\ndata:  simulationOutput\noutliers at both margin(s) = 2, observations = 200, p-value = 0.6757\nalternative hypothesis: true probability of success is not equal to 0.007968127\n95 percent confidence interval:\n 0.001213349 0.035654668\nsample estimates:\nfrequency of outliers (expected: 0.00796812749003984 ) \n                                                  0.01 \n\n\n\ncar::Anova(fit_twediee_cur)\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: spots_per_fruit\n          Chisq Df            Pr(&gt;Chisq)    \nfungicide 533.4  4 &lt; 0.00000000000000022 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nMeans comparison test\n\nemm_cura &lt;- emmeans(fit_twediee_cur, ~ fungicide, type=\"response\") \nres_cura &lt;- cld(emm_cura, alpha=0.05, Letters=letters,  type=\"response\")\nres_cura %&gt;% \n    mutate(`%Control`=abs((response/filter(.,fungicide==\"Control\")%&gt;% pull(response)-1)*100)) \n\n  fungicide  response        SE  df asymp.LCL asymp.UCL .group %Control\n2    Bellis  4.803382 0.4445747 Inf  4.006495  5.758770    a   82.81883\n5     Ziram  5.180715 0.4648248 Inf  4.345283  6.176768    a   81.46916\n3    Merpan  5.478331 0.4804890 Inf  4.613089  6.505861    a   80.40462\n4   Timorex 17.539752 1.3205836 Inf 15.133372 20.328773     b  37.26226\n1   Control 27.957257 1.9647959 Inf 24.359778 32.086015      c  0.00000\n\nres_cura %&gt;% \n  ggplot()+\n  aes(x=fungicide, y =response)+\n  geom_pointrange(aes(ymin=asymp.LCL , ymax=asymp.UCL))+\n  geom_col(alpha=.2, width=.2)"
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Efficacy of fungicides against brown spot of pear in Argentina",
    "section": "Introduction",
    "text": "Introduction\nAbstract…"
  }
]