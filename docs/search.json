[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Brown spot of pear",
    "section": "",
    "text": "Efficacy of fungicides against brown spot of pear in Argentina\nAbstract…"
  },
  {
    "objectID": "in_vitro.html#mycelial-growth",
    "href": "in_vitro.html#mycelial-growth",
    "title": "1  In vitro experiments",
    "section": "1.1 Mycelial growth",
    "text": "1.1 Mycelial growth\n\nraw &lt;- rio::import(\"data/mycelial_growth.csv\", dec=\",\")\n\ndat &lt;- raw %&gt;% \n  mutate_at(vars(dose, colony_diameter), as.numeric) %&gt;% \n  mutate_at(vars(fungicide, strain, experiment, plate), as.factor) %&gt;% \n  # mutate(dose_decimal = format(dose, scientific = FALSE) %&gt;% str_squish()) %&gt;% \n  # mutate(dose = as.numeric(dose_decimal)) %&gt;% \n  mutate(curve_id = interaction(fungicide:strain:experiment)) \n\nData scheme\n\ndat %&gt;% str\n\n'data.frame':   756 obs. of  7 variables:\n $ fungicide      : Factor w/ 4 levels \"Bellis\",\"Merpan\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ strain         : Factor w/ 3 levels \"S20\",\"S23\",\"S8\": 2 2 2 1 1 1 3 3 3 2 ...\n $ experiment     : Factor w/ 3 levels \"1\",\"2\",\"3\": 1 1 1 1 1 1 1 1 1 1 ...\n $ dose           : num  0 0 0 0 0 0 0 0 0 100 ...\n $ plate          : Factor w/ 3 levels \"1\",\"2\",\"3\": 1 2 3 1 2 3 1 2 3 1 ...\n $ colony_diameter: num  53 55 56 52 53 52 51 51 52 0 ...\n $ curve_id       : Factor w/ 36 levels \"Bellis:S20:1\",..: 4 4 4 1 1 1 7 7 7 4 ...\n\nftable(xtabs(~ fungicide + strain + experiment + dose, dat))\n\n                            dose 0 0.01 0.1 0.5 1 10 50 100 500 1000\nfungicide strain experiment                                         \nBellis    S20    1               3    3   3   0 3  3  3   3   0    0\n                 2               3    3   3   0 3  3  3   3   0    0\n                 3               3    3   3   0 3  3  3   3   0    0\n          S23    1               3    3   3   0 3  3  3   3   0    0\n                 2               3    3   3   0 3  3  3   3   0    0\n                 3               3    3   3   0 3  3  3   3   0    0\n          S8     1               3    3   3   0 3  3  3   3   0    0\n                 2               3    3   3   0 3  3  3   3   0    0\n                 3               3    3   3   0 3  3  3   3   0    0\nMerpan    S20    1               3    0   3   0 3  3  0   3   3    3\n                 2               3    0   3   0 3  3  0   3   3    3\n                 3               3    0   3   0 3  3  0   3   3    3\n          S23    1               3    0   3   0 3  3  0   3   3    3\n                 2               3    0   3   0 3  3  0   3   3    3\n                 3               3    0   3   0 3  3  0   3   3    3\n          S8     1               3    0   3   0 3  3  0   3   3    3\n                 2               3    0   3   0 3  3  0   3   3    3\n                 3               3    0   3   0 3  3  0   3   3    3\nTimorex   S20    1               3    0   3   0 3  3  0   3   3    3\n                 2               3    0   3   0 3  3  0   3   3    3\n                 3               3    0   3   0 3  3  0   3   3    3\n          S23    1               3    0   3   0 3  3  0   3   3    3\n                 2               3    0   3   0 3  3  0   3   3    3\n                 3               3    0   3   0 3  3  0   3   3    3\n          S8     1               3    0   3   0 3  3  0   3   3    3\n                 2               3    0   3   0 3  3  0   3   3    3\n                 3               3    0   3   0 3  3  0   3   3    3\nZiram     S20    1               3    0   3   3 3  3  3   3   0    0\n                 2               3    0   3   3 3  3  3   3   0    0\n                 3               3    0   3   3 3  3  3   3   0    0\n          S23    1               3    0   3   3 3  3  3   3   0    0\n                 2               3    0   3   3 3  3  3   3   0    0\n                 3               3    0   3   3 3  3  3   3   0    0\n          S8     1               3    0   3   3 3  3  3   3   0    0\n                 2               3    0   3   3 3  3  3   3   0    0\n                 3               3    0   3   3 3  3  3   3   0    0\n\n\n\n# per fungicide / strain\ndat %&gt;%  \n  nest(data = c(dose, colony_diameter)) %&gt;% \n  mutate(mod = map(data, ~broom::tidy(drm(colony_diameter~dose, fct = LL.3(), data = .))))%&gt;%\n  unnest(c(mod))%&gt;% \n  tibble()\n\n\n# per fungicide\ndat %&gt;%  \n  nest(data = c(-fungicide)) %&gt;% \n  mutate(mod = map(data, ~broom::tidy(drm(colony_diameter~dose, fct = LL.3(), data = .))))%&gt;%\n  unnest(c(mod)) %&gt;% \n  tibble()\n\nMeta-analysis approach\n\nmod_mg &lt;- metadrm(colony_diameter ~ dose, \n               data=dat,\n               fct=LL.3(),\n               ind=curve_id,\n               cid2=fungicide,\n               struct=\"UN\")\nsummary(mod_mg)\n\n\nTwo-stage meta-analysis dose-response model\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0\n\nCall:\nmetadrm(formula = colony_diameter ~ dose, fct = LL.3(), ind = curve_id, \n    data = dat, cid2 = fungicide, struct = \"UN\")\n\nVariance estimates:\n            estim    sqrt\ntau^2.1    0.0023  0.0481\ntau^2.2    8.1930  2.8623\ntau^2.3    0.0001  0.0076\n\n               rho.b:(I  rho.d:(I  rho.e:(I\nb:(Intercept)         1   -0.0949    0.9136\nd:(Intercept)   -0.0949         1   -0.4915\ne:(Intercept)    0.9136   -0.4915         1\n\n\nCoefficients:\n            Estimate    Std.Err t value  Pr(&gt;|t|)    \nb:Bellis  5.7954e-01 1.8249e-02 31.7572 &lt; 2.2e-16 ***\nb:Merpan  3.6118e-01 1.8337e-02 19.6968 &lt; 2.2e-16 ***\nb:Timorex 3.4904e-01 3.2449e-02 10.7565 &lt; 2.2e-16 ***\nb:Ziram   3.9270e-01 2.0238e-02 19.4040 &lt; 2.2e-16 ***\nd:Bellis  5.1375e+01 9.8903e-01 51.9446 &lt; 2.2e-16 ***\nd:Merpan  5.2514e+01 1.0668e+00 49.2274 &lt; 2.2e-16 ***\nd:Timorex 4.9987e+01 1.3972e+00 35.7759 &lt; 2.2e-16 ***\nd:Ziram   5.3064e+01 1.1219e+00 47.3004 &lt; 2.2e-16 ***\ne:Bellis  2.9754e-02 2.7299e-03 10.8994 &lt; 2.2e-16 ***\ne:Merpan  2.4515e+01 1.6200e+00 15.1327 &lt; 2.2e-16 ***\ne:Timorex 1.1284e+02 2.2168e+01  5.0901 1.779e-06 ***\ne:Ziram   6.4556e+00 6.1620e-01 10.4764 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nEstimates\n\nec50s &lt;- ED(mod_mg, respLev=c(50)) %&gt;% as.data.frame()\n\n\nEstimated effective doses\n\n               Estimate Std. Error\ne:Bellis:50  2.9754e-02 2.7299e-03\ne:Merpan:50  2.4515e+01 1.6200e+00\ne:Timorex:50 1.1284e+02 2.2168e+01\ne:Ziram:50   6.4556e+00 6.1620e-01\n\n# coef_mod_mg &lt;- summary(mod_mg) %&gt;% data.frame %&gt;% \n#   rownames_to_column(\"param\")  %&gt;% \n#   separate(param, c(\"param\", \"fungicide\"))\n# ec50s &lt;- coef_mod_mg %&gt;% filter(param==\"e\") \n# ec50s\n\nComparing effective dose levels for meta analysis\n\ned_comp &lt;- EDcomp(mod_mg, \n                  percVec=c(50), \n                  percMat=rbind(c(1,1,1,1)), \n                  interval=\"fieller\") %&gt;% \n      data.frame %&gt;% \n  rownames_to_column(\"comp\") %&gt;%\n  rowwise() %&gt;% \n  mutate(relative_to_one = f(Lower, Upper, 1)) # %&gt;% \n\n\nEstimated ratios of effect doses\n\n                       Estimate      Lower      Upper\nBellis/Merpan:50/50  1.2137e-03 9.5935e-04 1.5105e-03\nBellis/Timorex:50/50 2.6369e-04 1.7897e-04 4.4300e-04\nBellis/Ziram:50/50   4.6091e-03 3.5352e-03 6.0262e-03\nMerpan/Timorex:50/50 2.1726e-01 1.5163e-01 3.6084e-01\nMerpan/Ziram:50/50   3.7976e+00 3.0366e+00 4.8414e+00\nTimorex/Ziram:50/50  1.7479e+01 1.0384e+01 2.5875e+01\n\n  # as_huxtable() %&gt;% \n  # set_number_format(1)\n\nAs we compare EC50 ratios between fungicides, if the confidence interval does not contain 1, fungicides differ among them:\n\ned_comp %&gt;% \n  ggplot()+ \n  aes(x=comp, y=Estimate) + \n  geom_pointrange(aes(ymin = Lower, ymax = Upper, col=relative_to_one))+     \n  geom_hline(yintercept = 1, linetype=2)+\n  # scale_y_log10()+\n  coord_flip() + \n  labs(col=\"Relative to 1\")\n\n\ndat %&gt;% \n  ggplot()+\n  aes(x=dose+0.0001, y=colony_diameter, col=fungicide) +\n  geom_point(size=1) + \n  geom_smooth(method = drm, \n              method.args = list(fct = L.3()), se = F) +\n    geom_smooth(aes(group=curve_id), size=.3, linetype=2,  \n              method = drm, \n              method.args = list(fct = L.3()), se = F) +\n  labs(title= \"\", x = \"Dose (ppm)\",  y = \"Colony diameter (cm)\") + \n  scale_x_log10()"
  },
  {
    "objectID": "in_vitro.html#spore-germination",
    "href": "in_vitro.html#spore-germination",
    "title": "1  In vitro experiments",
    "section": "1.2 Spore germination",
    "text": "1.2 Spore germination\n\ngermi_raw &lt;- rio::import(\"data/germination.csv\", dec=\",\")\ngermi_dat &lt;- germi_raw %&gt;% \n  mutate_at(vars(dose), as.numeric) %&gt;% \n  mutate_at(vars(fungicide, strain, repetition, replicate), as.factor) %&gt;% \n  mutate(curve_id = interaction(fungicide:strain:repetition)) %&gt;% \n  mutate(dose_ = dose+0.0001)\n\nData scheme\n\ngermi_dat %&gt;% str\n\n'data.frame':   468 obs. of  12 variables:\n $ fungicide             : Factor w/ 4 levels \"Bellis\",\"Merpan\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ strain                : Factor w/ 3 levels \"S20\",\"S23\",\"S8\": 2 2 2 1 1 1 3 3 3 2 ...\n $ repetition            : Factor w/ 2 levels \"1\",\"2\": 1 1 1 1 1 1 1 1 1 1 ...\n $ replicate             : Factor w/ 3 levels \"1\",\"2\",\"3\": 1 2 3 1 2 3 1 2 3 1 ...\n $ dose                  : num  100 100 100 100 100 100 100 100 100 50 ...\n $ germinated_conidia    : int  0 0 0 0 0 0 0 0 0 0 ...\n $ total_conida          : int  100 100 100 100 100 100 100 100 100 100 ...\n $ non_germinated_conidia: int  100 100 100 100 100 100 100 100 100 100 ...\n $ inhibition_perc       : int  100 100 100 100 100 100 100 100 100 100 ...\n $ germination_percent   : int  0 0 0 0 0 0 0 0 0 0 ...\n $ curve_id              : Factor w/ 24 levels \"Bellis:S20:1\",..: 3 3 3 1 1 1 5 5 5 3 ...\n $ dose_                 : num  100 100 100 100 100 ...\n\nftable(xtabs(complete.cases(germination_percent)~fungicide+dose, data=germi_dat))\n\n          dose  0 0.1  1 10 50 100 500 1000\nfungicide                                  \nBellis         18  18 18 18 18  18   0    0\nMerpan         18  18 18 18  0  18  18   18\nTimorex        18  18 18 18  0  18  18   18\nZiram          18  18 18 18 18  18   0    0\n\nftable(xtabs(complete.cases(germination_percent)~fungicide+dose+strain , data=germi_dat))\n\n               strain S20 S23 S8\nfungicide dose                  \nBellis    0             6   6  6\n          0.1           6   6  6\n          1             6   6  6\n          10            6   6  6\n          50            6   6  6\n          100           6   6  6\n          500           0   0  0\n          1000          0   0  0\nMerpan    0             6   6  6\n          0.1           6   6  6\n          1             6   6  6\n          10            6   6  6\n          50            0   0  0\n          100           6   6  6\n          500           6   6  6\n          1000          6   6  6\nTimorex   0             6   6  6\n          0.1           6   6  6\n          1             6   6  6\n          10            6   6  6\n          50            0   0  0\n          100           6   6  6\n          500           6   6  6\n          1000          6   6  6\nZiram     0             6   6  6\n          0.1           6   6  6\n          1             6   6  6\n          10            6   6  6\n          50            6   6  6\n          100           6   6  6\n          500           0   0  0\n          1000          0   0  0\n\n\nMeta-analysis\n\nmod_germ &lt;- metadrm(germination_percent ~ dose_, \n               data=germi_dat,\n               fct=LL.3(),\n               ind=curve_id,\n               cid2=fungicide,\n               struct=\"UN\")\nsummary(mod_germ)\n\n\nTwo-stage meta-analysis dose-response model\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0\n\nCall:\nmetadrm(formula = germination_percent ~ dose_, fct = LL.3(), \n    ind = curve_id, data = germi_dat, cid2 = fungicide, struct = \"UN\")\n\nVariance estimates:\n            estim    sqrt\ntau^2.1    0.0024  0.0494\ntau^2.2    0.0063  0.0792\ntau^2.3    0.0001  0.0090\n\n               rho.b:(I  rho.d:(I  rho.e:(I\nb:(Intercept)         1    1.0000    1.0000\nd:(Intercept)    1.0000         1    1.0000\ne:(Intercept)    1.0000    1.0000         1\n\n\nCoefficients:\n            Estimate    Std.Err  t value  Pr(&gt;|t|)    \nb:Bellis  1.0899e+00 8.5417e-02  12.7594 &lt; 2.2e-16 ***\nb:Merpan  1.3070e+00 5.6028e-02  23.3286 &lt; 2.2e-16 ***\nb:Timorex 1.0750e+00 1.2498e-01   8.6014 4.650e-12 ***\nb:Ziram   6.1460e-01 4.1545e-02  14.7935 &lt; 2.2e-16 ***\nd:Bellis  9.9899e+01 2.3603e-01 423.2484 &lt; 2.2e-16 ***\nd:Merpan  9.7988e+01 5.3055e-01 184.6913 &lt; 2.2e-16 ***\nd:Timorex 9.7660e+01 1.7236e+00  56.6592 &lt; 2.2e-16 ***\nd:Ziram   9.9054e+01 2.0387e+00  48.5862 &lt; 2.2e-16 ***\ne:Bellis  2.3170e-02 5.1014e-03   4.5419 2.744e-05 ***\ne:Merpan  1.1356e+00 2.4159e-02  47.0036 &lt; 2.2e-16 ***\ne:Timorex 2.8903e+02 3.4065e+01   8.4846 7.338e-12 ***\ne:Ziram   1.5577e-01 2.7043e-02   5.7600 3.080e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nEstimates\n\nec50s_g &lt;- ED(mod_germ, respLev=c(50)) %&gt;% as.data.frame()\n\n\nEstimated effective doses\n\n               Estimate Std. Error\ne:Bellis:50  2.3170e-02 5.1014e-03\ne:Merpan:50  1.1356e+00 2.4159e-02\ne:Timorex:50 2.8903e+02 3.4065e+01\ne:Ziram:50   1.5577e-01 2.7043e-02\n\nec50s_g\n\n\n\n\nEstimate\nStd. Error\n\n\n0.0232\n0.0051\n\n\n1.14  \n0.0242\n\n\n289     \n34.1   \n\n\n0.156 \n0.027 \n\n\n\n\n\n\n\n\ngerm_comp &lt;- EDcomp(mod_germ, \n       percVec=c(50), \n       percMat=rbind(c(1,1,1,1)), \n       interval=\"fieller\")  %&gt;% \n    data.frame %&gt;% \n  rownames_to_column(\"comp\") %&gt;%\n  rowwise() %&gt;% \n  mutate(relative_to_one = f(Lower, Upper, 1))\n\n\nEstimated ratios of effect doses\n\n                       Estimate      Lower      Upper\nBellis/Merpan:50/50  2.0404e-02 1.1405e-02 2.9477e-02\nBellis/Timorex:50/50 8.0165e-05 4.3407e-05 1.2636e-04\nBellis/Ziram:50/50   1.4875e-01 7.7874e-02 2.6041e-01\nMerpan/Timorex:50/50 3.9289e-03 3.1644e-03 5.1559e-03\nMerpan/Ziram:50/50   7.2900e+00 5.3920e+00 1.1188e+01\nTimorex/Ziram:50/50  1.8555e+03 1.2413e+03 2.9785e+03\n\n# germ_comp\n\n\ncoef_mod_germ &lt;- summary(mod_germ) %&gt;% data.frame %&gt;% \n    rownames_to_column(\"param\")  %&gt;% \n  separate(param, c(\"param\", \"fungicide\"))\n\n\nTwo-stage meta-analysis dose-response model\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0\n\nCall:\nmetadrm(formula = germination_percent ~ dose_, fct = LL.3(), \n    ind = curve_id, data = germi_dat, cid2 = fungicide, struct = \"UN\")\n\nVariance estimates:\n            estim    sqrt\ntau^2.1    0.0024  0.0494\ntau^2.2    0.0063  0.0792\ntau^2.3    0.0001  0.0090\n\n               rho.b:(I  rho.d:(I  rho.e:(I\nb:(Intercept)         1    1.0000    1.0000\nd:(Intercept)    1.0000         1    1.0000\ne:(Intercept)    1.0000    1.0000         1\n\n\nCoefficients:\n            Estimate    Std.Err  t value  Pr(&gt;|t|)    \nb:Bellis  1.0899e+00 8.5417e-02  12.7594 &lt; 2.2e-16 ***\nb:Merpan  1.3070e+00 5.6028e-02  23.3286 &lt; 2.2e-16 ***\nb:Timorex 1.0750e+00 1.2498e-01   8.6014 4.650e-12 ***\nb:Ziram   6.1460e-01 4.1545e-02  14.7935 &lt; 2.2e-16 ***\nd:Bellis  9.9899e+01 2.3603e-01 423.2484 &lt; 2.2e-16 ***\nd:Merpan  9.7988e+01 5.3055e-01 184.6913 &lt; 2.2e-16 ***\nd:Timorex 9.7660e+01 1.7236e+00  56.6592 &lt; 2.2e-16 ***\nd:Ziram   9.9054e+01 2.0387e+00  48.5862 &lt; 2.2e-16 ***\ne:Bellis  2.3170e-02 5.1014e-03   4.5419 2.744e-05 ***\ne:Merpan  1.1356e+00 2.4159e-02  47.0036 &lt; 2.2e-16 ***\ne:Timorex 2.8903e+02 3.4065e+01   8.4846 7.338e-12 ***\ne:Ziram   1.5577e-01 2.7043e-02   5.7600 3.080e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# ec50_germ &lt;- coef_mod_germ %&gt;% filter(param==\"e\") \n# ec50_germ\n\n\ngerm_comp %&gt;% \n  ggplot()+ \n  aes(x=comp, y=Estimate) + \n  geom_pointrange(aes(ymin = Lower, ymax = Upper, col=relative_to_one))+     \n  geom_hline(yintercept = 1, linetype=2)+\n  coord_flip() + \n  labs(col=\"Relative to 1\")\n\n\ngermi_dat %&gt;% \n  ggplot()+\n  aes(x=dose+0.0001, y=germination_percent, col=fungicide) +\n  scale_x_log10() +\n  geom_point(size=1) + \n  geom_smooth(method = drm, \n              method.args = list(fct = L.3()), se = F) +  \n  geom_smooth(aes(group=curve_id), size=.3, linetype=2,  \n              method = drm, \n              method.args = list(fct = L.3()), se = F) +\n  labs(title= \"\", x = \"Dose (ppm)\",  y = \"Germination (%)\", col= \"Fungicide\")"
  },
  {
    "objectID": "in_field.html",
    "href": "in_field.html",
    "title": "3  In-field assays",
    "section": "",
    "text": "source(here::here(\"setup.R\"))\n\nSkipping install of 'drcData' from a github remote, the SHA1 (09f9da30) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\nSkipping install of 'drc' from a github remote, the SHA1 (8719d43a) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\nSkipping install of 'medrc' from a github remote, the SHA1 (bc36df51) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\n[conflicted] Will prefer dplyr::filter over any other package.\n[conflicted] Will prefer dplyr::select over any other package.\n✔ Setting active project to 'C:/Users/Administrator/Documents/github_juanchiem/Chemical_control_of_brown_spot_of_pear'\n✔ Leaving 'README.Rmd' unchanged\n\nlibrary(lme4)\ntheme_set(theme_bw(base_size=12))\n\n\ndat &lt;- rio::import(\"data/field.csv\") %&gt;% \n  mutate_at(vars(fungicide, season, tree), as.factor) %&gt;% \n  mutate(fungicide=fct_relevel(fungicide, \"Control\"))\nstr(dat)\n\n'data.frame':   60 obs. of  5 variables:\n $ fungicide: Factor w/ 3 levels \"Control\",\"Bellis\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ season   : Factor w/ 2 levels \"1\",\"2\": 2 2 2 2 2 2 2 2 2 2 ...\n $ tree     : Factor w/ 10 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ leaves   : int  250 250 250 250 250 250 250 250 250 250 ...\n $ diseased : int  27 19 26 30 16 40 27 22 19 8 ...\n\n\nData scheme\n\nftable(xtabs(~ fungicide + tree + season, dat))\n\n               season 1 2\nfungicide tree           \nControl   1           1 1\n          2           1 1\n          3           1 1\n          4           1 1\n          5           1 1\n          6           1 1\n          7           1 1\n          8           1 1\n          9           1 1\n          10          1 1\nBellis    1           1 1\n          2           1 1\n          3           1 1\n          4           1 1\n          5           1 1\n          6           1 1\n          7           1 1\n          8           1 1\n          9           1 1\n          10          1 1\nZiram     1           1 1\n          2           1 1\n          3           1 1\n          4           1 1\n          5           1 1\n          6           1 1\n          7           1 1\n          8           1 1\n          9           1 1\n          10          1 1\n\n\nModel\n\ndat %&gt;% \n  ggplot() + \n  aes(x=fungicide, y=diseased/leaves) + \n  # geom_boxplot(width=.5) + \n  geom_text(aes(label=tree))+\n  geom_jitter(width=.2, col=2, alpha=.5) + \n  labs(x=\"Treatment\", y=\"Disease incidence\") + \n  facet_wrap(\"season\")\n\n\n\n\n\nmod &lt;- glmer(diseased/leaves ~ fungicide * season + (1|tree),\n             weights=leaves, family=binomial, dat)\n\nGoodness of fit\n\nsimulateResiduals(mod) %&gt;% testResiduals()\n\n\n\ncar::Anova(mod)\n\n\n\n\nChisq\nDf\nPr(&gt;Chisq)\n\n\n161  \n2\n1.35e-35\n\n\n25.2\n1\n5.11e-07\n\n\n41.1\n2\n1.18e-09\n\n\n\n\n\n\n\nMeans comparison test\n\nemm &lt;- emmeans(mod, ~ fungicide|season, type=\"response\") \nres &lt;- cld(emm, alpha=0.05, Letters=letters,  type=\"response\") %&gt;% \n   mutate(`%Control`=abs((prob/dplyr::filter(.,fungicide==\"Control\")%&gt;% pull(prob)-1)*100)) %&gt;% \n  tibble\n\nres %&gt;% \n  rename(Season=\"season\") %&gt;% \n  ggplot()+\n  aes(x=fungicide, y =prob)+\n  geom_pointrange(aes(ymin=asymp.LCL , ymax=asymp.UCL))+\n  facet_wrap(\"Season\", labeller = label_both) + geom_text(aes(label=str_squish(.group)), angle=90, vjust=-1, hjust=.5, ) + \n  geom_jitter(data=dat%&gt;%rename(Season=\"season\") , aes(y=diseased/leaves), alpha=.2, width=.1)"
  },
  {
    "objectID": "bioassay.html#preventive-treatments",
    "href": "bioassay.html#preventive-treatments",
    "title": "2  Bioassays in fruit",
    "section": "2.1 Preventive treatments",
    "text": "2.1 Preventive treatments\nDisease severity analysis (spots per fruit)\n\nsource(here::here(\"setup.R\"))\n\nSkipping install of 'drcData' from a github remote, the SHA1 (09f9da30) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\nSkipping install of 'drc' from a github remote, the SHA1 (8719d43a) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\nSkipping install of 'medrc' from a github remote, the SHA1 (bc36df51) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\n[conflicted] Will prefer dplyr::filter over any other package.\n[conflicted] Will prefer dplyr::select over any other package.\n✔ Setting active project to 'C:/Users/Administrator/Documents/github_juanchiem/Chemical_control_of_brown_spot_of_pear'\n✔ Leaving 'README.Rmd' unchanged\n\nlibrary(lme4)\nlibrary(glmmTMB)\nlibrary(DHARMa)\n\nThis is DHARMa 0.4.6. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\n\ntheme_set(theme_bw(base_size=12))\n\n\ndat &lt;- rio::import(\"data/bioassay_data.csv\") %&gt;%\n  mutate_at(vars(fungicide, repetition, day, replicate, fruit), as.factor) %&gt;% \n  mutate(fungicide=fct_relevel(fungicide, \"control\"))\n\n\ndat %&gt;% str\n\n'data.frame':   600 obs. of  6 variables:\n $ fungicide      : Factor w/ 5 levels \"control\",\"Bellis\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ repetition     : Factor w/ 2 levels \"1\",\"2\": 1 1 1 1 1 1 1 1 1 1 ...\n $ day            : Factor w/ 3 levels \"1\",\"7\",\"15\": 1 1 1 1 1 1 1 1 1 1 ...\n $ replicate      : Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 1 1 1 1 1 2 2 2 2 2 ...\n $ fruit          : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 1 2 3 4 5 ...\n $ spots_per_fruit: int  1 0 0 0 0 0 0 0 0 0 ...\n\n\nData scheme\n\nftable(xtabs(~ fungicide + day + repetition + replicate, dat))\n\n                         replicate 1 2 3 4\nfungicide day repetition                  \ncontrol   1   1                    5 5 5 5\n              2                    5 5 5 5\n          7   1                    5 5 5 5\n              2                    5 5 5 5\n          15  1                    5 5 5 5\n              2                    5 5 5 5\nBellis    1   1                    5 5 5 5\n              2                    5 5 5 5\n          7   1                    5 5 5 5\n              2                    5 5 5 5\n          15  1                    5 5 5 5\n              2                    5 5 5 5\nMerpan    1   1                    5 5 5 5\n              2                    5 5 5 5\n          7   1                    5 5 5 5\n              2                    5 5 5 5\n          15  1                    5 5 5 5\n              2                    5 5 5 5\nTimorex   1   1                    5 5 5 5\n              2                    5 5 5 5\n          7   1                    5 5 5 5\n              2                    5 5 5 5\n          15  1                    5 5 5 5\n              2                    5 5 5 5\nZiram     1   1                    5 5 5 5\n              2                    5 5 5 5\n          7   1                    5 5 5 5\n              2                    5 5 5 5\n          15  1                    5 5 5 5\n              2                    5 5 5 5\n\n\n\n2.1.1 Disease severity\n\ndat %&gt;% \n  ggplot() + \n  aes(x=day, y=spots_per_fruit) + \n  geom_boxplot(width=.5) + \n  geom_jitter(width=.2, col=2, alpha=.5) + \n  labs(x=\"Treatment\", y=\"Severity (spots per fruit)\") + \n  facet_grid(repetition~fungicide)\n\n\n\n\n\ndat %&gt;% \n  count(spots_per_fruit) %&gt;% \n  ggplot() + \n  aes(x=spots_per_fruit, y=n) + \n  geom_col()\n\n\n\n\nModel fitting\n\n# https://glmmtmb.github.io/glmmTMB/articles/glmmTMB.pdf\nfit_zipoisson_prev &lt;- glmmTMB(spots_per_fruit~fungicide*day +\n                           (1|repetition/replicate),\n               ziformula = ~1, family = poisson,\n             dat)\n# performance::check_overdispersion(fit_zipoisson)\n# simulateResiduals(fit_zipoisson) %&gt;% testResiduals()\n\n\nfit_zinbinom_prev &lt;- update(fit_zipoisson_prev,family=nbinom2)\nfit_zinbinom1_prev &lt;- update(fit_zipoisson_prev,family=nbinom1)\nfit_twediee_prev &lt;- update(fit_zipoisson_prev,family=tweedie)\nAIC(fit_zipoisson_prev,fit_zinbinom_prev,fit_zinbinom1_prev, fit_twediee_prev)\n\n\n\n\ndf\nAIC\n\n\n18\n3.89e+03\n\n\n19\n3.49e+03\n\n\n19\n3.42e+03\n\n\n20\n3.41e+03\n\n\n\n\n\n\n#               df      AIC\n# fit_zipoisson 18 3895.200\n# fit_zinbinom  19 3489.228\n# fit_zinbinom1 19 3418.201\n# fit_twediee   20 3405.606\n\nGoodness of fit\n\nsimulateResiduals(fit_twediee_prev) %&gt;% testResiduals()\n\n\n\n\n$uniformity\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  simulationOutput$scaledResiduals\nD = 0.021, p-value = 0.954\nalternative hypothesis: two-sided\n\n\n$dispersion\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.76533, p-value = 0.064\nalternative hypothesis: two.sided\n\n\n$outliers\n\n    DHARMa outlier test based on exact binomial test with approximate\n    expectations\n\ndata:  simulationOutput\noutliers at both margin(s) = 10, observations = 600, p-value = 0.03228\nalternative hypothesis: true probability of success is not equal to 0.007968127\n95 percent confidence interval:\n 0.008020507 0.030436459\nsample estimates:\nfrequency of outliers (expected: 0.00796812749003984 ) \n                                            0.01666667 \n\n\n$uniformity\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  simulationOutput$scaledResiduals\nD = 0.021, p-value = 0.954\nalternative hypothesis: two-sided\n\n\n$dispersion\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.76533, p-value = 0.064\nalternative hypothesis: two.sided\n\n\n$outliers\n\n    DHARMa outlier test based on exact binomial test with approximate\n    expectations\n\ndata:  simulationOutput\noutliers at both margin(s) = 10, observations = 600, p-value = 0.03228\nalternative hypothesis: true probability of success is not equal to 0.007968127\n95 percent confidence interval:\n 0.008020507 0.030436459\nsample estimates:\nfrequency of outliers (expected: 0.00796812749003984 ) \n                                            0.01666667 \n\n\n\ncar::Anova(fit_twediee_prev)\n\n\n\n\nChisq\nDf\nPr(&gt;Chisq)\n\n\n2.83e+03\n4\n0       \n\n\n148       \n2\n5.92e-33\n\n\n328       \n8\n4.73e-66\n\n\n\n\n\n\n\nMeans comparison test\n\nemm_prev &lt;- emmeans(fit_twediee_prev, ~ fungicide|day, type=\"response\") \nres_prev &lt;- cld(emm_prev, alpha=0.05, Letters=letters,  type=\"response\")\nres_prev %&gt;% \n   mutate(`%Control`=abs((response/filter(.,fungicide==\"control\")%&gt;% pull(response)-1)*100)) \n\n\n\n\nfungicide\nday\nresponse\nSE\ndf\nasymp.LCL\nasymp.UCL\n.group\n%Control\n\n\nBellis\n1\n0.127\n0.0644\nInf\n0.0468\n0.343\na\n99.8 \n\n\nMerpan\n1\n0.506\n0.147 \nInf\n0.286 \n0.892\nab\n99.3 \n\n\nZiram\n1\n1.12 \n0.236 \nInf\n0.739 \n1.69 \nb\n98.6 \n\n\nTimorex\n1\n19.4  \n1.33  \nInf\n17     \n22.2  \nc\n73.7 \n\n\ncontrol\n1\n73.9  \n3.23  \nInf\n67.8   \n80.5  \nd\n2.77\n\n\nZiram\n7\n1.49 \n0.282 \nInf\n1.03  \n2.16 \na\n98.1 \n\n\nMerpan\n7\n2.32 \n0.369 \nInf\n1.7   \n3.17 \na\n96.9 \n\n\nBellis\n7\n2.8  \n0.417 \nInf\n2.09  \n3.74 \na\n96.3 \n\n\nTimorex\n7\n54.2  \n2.61  \nInf\n49.3   \n59.5  \nb\n32.2 \n\n\ncontrol\n7\n76    \n3.29  \nInf\n69.8   \n82.7  \nc\n2.84\n\n\nBellis\n15\n4.32 \n0.545 \nInf\n3.37  \n5.53 \na\n94.3 \n\n\nZiram\n15\n6.13 \n0.661 \nInf\n4.96  \n7.57 \na\n92.3 \n\n\nMerpan\n15\n10.3  \n1.27  \nInf\n8.09  \n13.1  \nb\n86.1 \n\n\nTimorex\n15\n57.5  \n2.72  \nInf\n52.4   \n63.1  \nc\n24.3 \n\n\ncontrol\n15\n79.9  \n3.41  \nInf\n73.5   \n86.8  \nd\n0   \n\n\n\n\n\n\nres_prev %&gt;% \n  ggplot()+\n  aes(x=day, y =response)+\n  geom_pointrange(aes(ymin=asymp.LCL , ymax=asymp.UCL))+\n  geom_col(alpha=.2, width=.2)+\n  facet_wrap(\"fungicide\")\n\n\n\n\n\n\n2.1.2 Disease incidence\n\ndat_inc &lt;- dat %&gt;% \n  filter(!fungicide==\"control\") %&gt;% \n  group_by(fungicide, repetition, day, replicate, fruit) %&gt;% \n  summarise(diseased = spots_per_fruit &gt;0) %&gt;% \n  group_by(fungicide, repetition, day, replicate) %&gt;% \n  summarise(n= sum(!is.na(diseased)),\n            inc_prop=mean(diseased)) %&gt;% \n  data.frame\n\nModel\n\nmod_inc &lt;- glmer(inc_prop ~ fungicide*day +\n                   (1|repetition/replicate),\n                 weights=n,family=binomial, \n                 data=dat_inc)\n\nsimulateResiduals(mod_inc) %&gt;% testResiduals()\n\n\n\n\n\n\n\n$uniformity\n\n    Exact one-sample Kolmogorov-Smirnov test\n\ndata:  simulationOutput$scaledResiduals\nD = 0.065276, p-value = 0.7832\nalternative hypothesis: two-sided\n\n\n$dispersion\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.93691, p-value = 0.488\nalternative hypothesis: two.sided\n\n\n$outliers\n\n    DHARMa bootstrapped outlier test\n\ndata:  simulationOutput\noutliers at both margin(s) = 0, observations = 96, p-value = 1\nalternative hypothesis: two.sided\n percent confidence interval:\n 0.00000000 0.01041667\nsample estimates:\noutlier frequency (expected: 0.0009375 ) \n                                       0 \n\n\n$uniformity\n\n    Exact one-sample Kolmogorov-Smirnov test\n\ndata:  simulationOutput$scaledResiduals\nD = 0.065276, p-value = 0.7832\nalternative hypothesis: two-sided\n\n\n$dispersion\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.93691, p-value = 0.488\nalternative hypothesis: two.sided\n\n\n$outliers\n\n    DHARMa bootstrapped outlier test\n\ndata:  simulationOutput\noutliers at both margin(s) = 0, observations = 96, p-value = 1\nalternative hypothesis: two.sided\n percent confidence interval:\n 0.00000000 0.01041667\nsample estimates:\noutlier frequency (expected: 0.0009375 ) \n                                       0 \n\n\nMeans comparison test\n\nemm_inc &lt;- emmeans(mod_inc, ~ day|fungicide, type=\"response\") \nres_inc &lt;- cld(emm_inc, alpha=0.05, Letters=letters,  type=\"response\")\nres_inc\n\n\n\n\nday\nfungicide\nprob\nSE\ndf\nasymp.LCL\nasymp.UCL\n.group\n\n\n1\nBellis\n0.125\n0.0523  \nInf\n0.053   \n0.267\na\n\n\n7\nBellis\n0.675\n0.0741  \nInf\n0.517   \n0.801\nb\n\n\n15\nBellis\n0.825\n0.0601  \nInf\n0.676   \n0.914\nb\n\n\n1\nMerpan\n0.45 \n0.0787  \nInf\n0.305   \n0.604\na\n\n\n7\nMerpan\n0.7  \n0.0725  \nInf\n0.543   \n0.821\nab\n\n\n15\nMerpan\n0.8  \n0.0632  \nInf\n0.648   \n0.897\nb\n\n\n1\nTimorex\n1    \n1.37e-09\nInf\n2.22e-16\n1    \na\n\n\n7\nTimorex\n1    \n4.92e-10\nInf\n2.22e-16\n1    \na\n\n\n15\nTimorex\n1    \n3.13e-10\nInf\n2.22e-16\n1    \na\n\n\n7\nZiram\n0.575\n0.0782  \nInf\n0.42    \n0.717\na\n\n\n1\nZiram\n0.6  \n0.0775  \nInf\n0.443   \n0.738\na\n\n\n15\nZiram\n0.95 \n0.0345  \nInf\n0.821   \n0.987\nb\n\n\n\n\n\n\n\n\nres_inc %&gt;% \n  ggplot()+\n  aes(x=day, y =prob)+\n  geom_pointrange(aes(ymin=asymp.LCL , ymax=asymp.UCL))+\n  geom_col(alpha=.2, width=.2)+\n  facet_wrap(\"fungicide\")"
  },
  {
    "objectID": "bioassay.html#curative-treatments",
    "href": "bioassay.html#curative-treatments",
    "title": "2  Bioassays in fruit",
    "section": "2.2 Curative treatments",
    "text": "2.2 Curative treatments\n\ncura &lt;- rio::import(\"data/curative.csv\") %&gt;% \n   mutate_at(vars(fungicide, repetition, replicate, fruit), as.factor) %&gt;% \n  mutate(fungicide=fct_relevel(fungicide, \"Control\")) \n\nData scheme\n\ncura %&gt;% str\n\n'data.frame':   200 obs. of  5 variables:\n $ fungicide      : Factor w/ 5 levels \"Control\",\"Bellis\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ repetition     : Factor w/ 2 levels \"1\",\"2\": 1 1 1 1 1 1 1 1 1 1 ...\n $ replicate      : Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 1 1 1 1 1 2 2 2 2 2 ...\n $ fruit          : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 1 2 3 4 5 ...\n $ spots_per_fruit: int  33 32 40 22 16 16 6 14 41 30 ...\n\nftable(xtabs(~ fungicide + repetition + replicate, cura))\n\n                     replicate 1 2 3 4\nfungicide repetition                  \nControl   1                    5 5 5 5\n          2                    5 5 5 5\nBellis    1                    5 5 5 5\n          2                    5 5 5 5\nMerpan    1                    5 5 5 5\n          2                    5 5 5 5\nTimorex   1                    5 5 5 5\n          2                    5 5 5 5\nZiram     1                    5 5 5 5\n          2                    5 5 5 5\n\n\n\n2.2.1 Disease severity (spots per fruit)\nBox plot: severity per treatment and repetition (1 and 2)\n\ncura %&gt;% \n  ggplot() + \n  aes(x=fungicide, y=spots_per_fruit) + \n  geom_boxplot(width=.5) + \n  geom_jitter(width=.2, col=2, alpha=.5) + \n  labs(x=\"Treatment\", y=\"Severity (spots per fruit)\") + \n  facet_wrap(\"repetition\")\n\n\n\n\nModel fitting\n\n# https://glmmtmb.github.io/glmmTMB/articles/glmmTMB.pdf\nfit_zipoisson_cur &lt;- glmmTMB(spots_per_fruit~fungicide +\n                               (1|repetition/replicate),\n                             ziformula = ~1, \n                             family = poisson,data = cura)\n# performance::check_overdispersion(fit_zipoisson)\n# simulateResiduals(fit_zipoisson) %&gt;% testResiduals()\n\n\nfit_zinbinom_cur &lt;- update(fit_zipoisson_cur,family=nbinom2)\nfit_zinbinom1_cur &lt;- update(fit_zipoisson_cur,family=nbinom1)\nfit_twediee_cur &lt;- update(fit_zipoisson_cur,family=tweedie)\nAIC(fit_zipoisson_cur,fit_zinbinom_cur,fit_zinbinom1_cur, fit_twediee_cur)\n\n\n\n\ndf\nAIC\n\n\n8\n1.26e+03\n\n\n9\n1.18e+03\n\n\n9\n1.18e+03\n\n\n10\n1.18e+03\n\n\n\n\n\n\n#               df      AIC\n# fit_zipoisson  8 1270.421\n# fit_zinbinom   9 1176.582\n# fit_zinbinom1  9 1182.421\n# fit_twediee   10 1180.572\n\nGoodness of fit\n\nsimulateResiduals(fit_twediee_cur) %&gt;% testResiduals()\n\n\n\n\n$uniformity\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  simulationOutput$scaledResiduals\nD = 0.041, p-value = 0.8898\nalternative hypothesis: two-sided\n\n\n$dispersion\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.73874, p-value = 0.16\nalternative hypothesis: two.sided\n\n\n$outliers\n\n    DHARMa outlier test based on exact binomial test with approximate\n    expectations\n\ndata:  simulationOutput\noutliers at both margin(s) = 2, observations = 200, p-value = 0.6757\nalternative hypothesis: true probability of success is not equal to 0.007968127\n95 percent confidence interval:\n 0.001213349 0.035654668\nsample estimates:\nfrequency of outliers (expected: 0.00796812749003984 ) \n                                                  0.01 \n\n\n$uniformity\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  simulationOutput$scaledResiduals\nD = 0.041, p-value = 0.8898\nalternative hypothesis: two-sided\n\n\n$dispersion\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.73874, p-value = 0.16\nalternative hypothesis: two.sided\n\n\n$outliers\n\n    DHARMa outlier test based on exact binomial test with approximate\n    expectations\n\ndata:  simulationOutput\noutliers at both margin(s) = 2, observations = 200, p-value = 0.6757\nalternative hypothesis: true probability of success is not equal to 0.007968127\n95 percent confidence interval:\n 0.001213349 0.035654668\nsample estimates:\nfrequency of outliers (expected: 0.00796812749003984 ) \n                                                  0.01 \n\n\n\ncar::Anova(fit_twediee_cur)\n\n\n\n\nChisq\nDf\nPr(&gt;Chisq)\n\n\n533\n4\n3.98e-114\n\n\n\n\n\n\n\nMeans comparison test\n\nemm_cura &lt;- emmeans(fit_twediee_cur, ~ fungicide, type=\"response\") \nres_cura &lt;- cld(emm_cura, alpha=0.05, Letters=letters,  type=\"response\")\nres_cura %&gt;% \n    mutate(`%Control`=abs((response/filter(.,fungicide==\"Control\")%&gt;% pull(response)-1)*100)) \n\n\n\n\nfungicide\nresponse\nSE\ndf\nasymp.LCL\nasymp.UCL\n.group\n%Control\n\n\nBellis\n4.8 \n0.445\nInf\n4.01\n5.76\na\n82.8\n\n\nZiram\n5.18\n0.465\nInf\n4.35\n6.18\na\n81.5\n\n\nMerpan\n5.48\n0.48 \nInf\n4.61\n6.51\na\n80.4\n\n\nTimorex\n17.5 \n1.32 \nInf\n15.1 \n20.3 \nb\n37.3\n\n\nControl\n28   \n1.96 \nInf\n24.4 \n32.1 \nc\n0  \n\n\n\n\n\n\nres_cura %&gt;% \n  ggplot()+\n  aes(x=fungicide, y =response)+\n  geom_pointrange(aes(ymin=asymp.LCL , ymax=asymp.UCL))+\n  geom_col(alpha=.2, width=.2)"
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Efficacy of fungicides against brown spot of pear in Argentina",
    "section": "Introduction",
    "text": "Introduction\nAbstract…"
  }
]